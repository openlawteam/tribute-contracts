
©$¡$# Also defined in src/helpers/enums.ts
enum Voting {
  OFFCHAIN
  ONCHAIN
}

type Molochv3 @entity {
  "unique identifier and primary key of the `Tribute` entity"
  id: ID! # Set to `${molochv3.id}
  "The DAO address"
  daoAddress: Bytes
  "The bank of the DAO"
  bankAddress: Bytes
  "The name of the DAO"
  name: String
  "The DAO creator address"
  creator: Bytes
  totalShares: String
  createdAt: String
  "List of registered adapters"
  adapters: [Adapter!]! @derivedFrom(field: "molochv3")
  "List of registered extensions"
  extensions: [Extension!]! @derivedFrom(field: "molochv3")

  # members: [MemberMolochv3]! @derivedFrom(field: "user")
}

type Member @entity {
  "unique identifier and primary key of the `Member` entity"
  id: ID! # Set to `${member.id}`
  memberAddress: Bytes
  createdAt: String
  delegateKey: Bytes
  shares: BigInt!
  loot: BigInt!
  lockedLoot: BigInt!
  tokenBalances: [TokenBalance!] @derivedFrom(field: "member")
  proposals: [Proposal!] @derivedFrom(field: "member")
  didFullyRagequit: Boolean
  isDelegated: Boolean
  isJailed: Boolean

  # molochv3: [MemberMolochv3!] @derivedFrom(field: "molochv3")
}

# type MemberMolochv3 @entity {
#   id: ID! # Set to `${member.id}-${molochv3.id}`
#   member: Member!
#   molochv3: Molochv3!
# }

type Proposal @entity {
  "unique identifier and primary key of the `Proposal` entity"
  id: ID! # Set to `${molochv3.id}-proposal-${proposal.id}`
  proposalId: Bytes!
  flags: BigInt!
  submittedBy: Bytes
  sponsored: Boolean
  sponsoredAt: String
  sponsoredBy: Bytes
  processed: Boolean
  processedAt: String
  processedBy: Bytes
  member: Member

  # onboarding; proposal details
  tokenToMint: Bytes
  amount: BigInt
  sharesRequested: BigInt
  token: Bytes
  applicant: Bytes
  proposer: Bytes

  # distribute; proposal details
  "The share holder address that will receive the funds. If 0x0, the funds will be distributed to all members of the DAO"
  shareHolderAddr: Bytes
  "The distribution status or the kick status"
  status: String
  "Current iteration index to control the cached for-loop"
  currentIndex: BigInt
  "The block number in which the proposal/or vote results has been created"
  blockNumber: BigInt

  # tribute; proposal details
  "The amount requested of DAO internal tokens"
  requestAmount: BigInt
  "The amount of tribute tokens."
  tributeAmount: BigInt

  # guildkick; proposal details
  "Keeps track of the latest ongoing kick proposal per DAO to ensure only 1 kick happens at a time."
  ongoingKicks: Bytes
  "The address of the member to kick out of the DAO."
  memberToKick: Bytes
  "The number of shares of the member that should be burned."
  tokensToBurn: BigInt

  # financing; proposal details
  "Additional details about the financing proposal"
  details: Bytes

  # managing; proposal details
  adapterId: Bytes
  adapterAddress: Bytes
  keys: [Bytes!]
  values: [BigInt!]

  # offchain votes
  snapshot: BigInt
  proposalHash: Bytes
  reporter: Bytes
  resultRoot: Bytes
  nbVoters: BigInt
  nbNo: BigInt
  nbYes: BigInt
  index: BigInt
  startingTime: BigInt
  gracePeriodStartingTime: BigInt
  isChallenged: Boolean
  fallbackVotes: Boolean
  fallbackVotesCount: BigInt

  # onchain votes
  votes: BigInt

  onChainOrOffChainVotes: Vote @derivedFrom(field: "proposal")

  # offChainVotes: Vote # @derivedFrom(field: "proposal")
  # onChainVotes: Vote # @derivedFrom(field: "proposal")
}

type Vote @entity {
  "unique identifier and primary key of the `Vote` entity"
  id: ID! # Set to `${molochv3.id}-vote-${proposal.id}`
  nbNo: BigInt!
  nbYes: BigInt!
  nbVoters: BigInt
  # offChain: Proposal
  # onChain: Proposal
  proposal: Proposal
  voteType: Voting!
}

type Token @entity {
  "unique identifier and primary key of the `Token` entity"
  id: ID! # Set to `${molochv3.id}-token-${token.id}`
  tokenAddress: Bytes!
  balance: BigInt
}

type TokenBalance @entity {
  "unique identifier and primary key of the `TokenBalance` entity"
  id: ID! # Set to `${molochv3.id}-tokenbalance-${tokenBalance.id}`
  token: Token! #[Token!]
  tokenBalance: BigInt!
  member: Member
}

type Adapter @entity {
  "unique identifier and primary key of the `Adapter` entity"
  id: ID! # Set to `${molochv3.id}-adapter-${adapter.id}`
  adapterId: Bytes!
  adapterAddress: Bytes!
  "Adapter acl (access control layer)"
  acl: BigInt!
  molochv3: Molochv3
}

type Extension @entity {
  "unique identifier and primary key of the `Extension` entity"
  id: ID! # Set to `${molochv3.id}-extension-${extension.id}`
  "Extension contract address"
  extensionAddress: Bytes!
  "Extension ID"
  extensionId: Bytes!
  molochv3: Molochv3
}
¡$